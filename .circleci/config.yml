job-defaults: &job-defaults
  working_directory: &working_directory
    ~/starlarky
  test_results_directory: &test_results_directory
    /tmp/test-results
  executable_results_directory: &executable_results_directory
    /tmp/executable-dir
  environment:
    - EXECUTABLE_RESULT_PATH: *executable_results_directory
    - TEST_RESULTS_PATH: *test_results_directory
    - MAVEN_OPTS: -Xmx6400m

# Template to save Maven dependency cache to restore it in another jobs
save-maven-cache: &save-maven-cache
  save_cache:
    key: starlarky-{{ checksum "pom.xml" }}
    paths:
      - ~/.m2

restore-maven-cache: &restore-maven-cache
  restore_cache:
    key: starlarky-{{ checksum "pom.xml" }}

persist-workspace: &persist-workspace
  persist_to_workspace:
    root: .
    paths: "*"

attach-workspace: &attach-workspace
  attach_workspace:
    at: *working_directory

# === JOBS ===
version: 2
jobs:
  build:
    <<: *job-defaults
    machine:
      enabled: true
    steps:
      - checkout
      - <<: *restore-maven-cache
      - run:
          name: Maven Clean Package
          command: |
            mvn clean install -DskipTests dependency:go-offline -T 2.0C -B
      - <<: *save-maven-cache
      - <<: *persist-workspace
  test:
    <<: *job-defaults
    machine:
      enabled: true
    steps:
      - checkout
      - <<: *restore-maven-cache
      - run: mkdir -p $TEST_RESULTS_PATH/junit/
      - run: mkdir -p $TEST_RESULTS_PATH/coverage/
      - run:
          name: Maven Test
          command: |
            mvn test dependency:go-offline
      - run: find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $TEST_RESULTS_PATH/junit/ \;
      - run: find . -type f -regex ".*/target/surefire-reports/.*-output.txt" -exec cp {} $TEST_RESULTS_PATH/junit/ \;
      - run: find . -type f -regex ".*/target/site/.*" -exec cp --parents {} $TEST_RESULTS_PATH/coverage/ \;
      - store_artifacts:
          path: *test_results_directory
      - store_test_results:
          path: *test_results_directory

  deploy:
    <<: *job-defaults
    environment:
      GRAALVM_HOME: /home/circleci/starlarky/.graalvm
    machine:
      enabled: true
    steps:
      - checkout
      - <<: *attach-workspace
      - run:
          name: Install GraalVM
          command: curl https://github.com/oracle/graal/releases/download/vm-19.1.1/graalvm-ce-linux-amd64-19.1.1.tar.gz -O -J -L && tar xfz graalvm-ce-linux-amd64-19.1.1.tar.gz && mv graalvm-ce-19.1.1 .graalvm && rm graalvm-ce-linux-amd64-19.1.1.tar.gz
      - run:
          name: Install native-image
          command: $GRAALVM_HOME/bin/gu install native-image
      - run:
          name: Build (Native)
          command: mvn package -Pnative -DskipTests
          no_output_timeout: 30m
      - run: find . -type f -regex ".*/larky/target/larky-*" -exec cp --parents {} $EXECUTABLE_RESULT_PATH/ \;
      - store_artifacts:
          path: *executable_results_directory

workflows:
  version: 2
  build_and_tests:
    jobs:
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+(?:-[a-zA-Z0-9_.]+){0,1}$/
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
