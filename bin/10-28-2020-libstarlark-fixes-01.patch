diff --git b/libstarlark/src/main/java/net/starlark/java/eval/StarlarkSemantics.java a/libstarlark/src/main/java/net/starlark/java/eval/StarlarkSemantics.java
index b0704194..3a65616a 100644
--- b/libstarlark/src/main/java/net/starlark/java/eval/StarlarkSemantics.java
+++ a/libstarlark/src/main/java/net/starlark/java/eval/StarlarkSemantics.java
@@ -17,6 +17,9 @@ package net.starlark.java.eval;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableSortedMap;
+
+import net.starlark.java.syntax.FileOptions;
+
 import java.util.HashMap;
 import java.util.Map;
 
diff --git b/libstarlark/src/main/java/net/starlark/java/syntax/FileOptions.java a/libstarlark/src/main/java/net/starlark/java/syntax/FileOptions.java
index 5301e1d4..1c47709e 100644
--- b/libstarlark/src/main/java/net/starlark/java/syntax/FileOptions.java
+++ a/libstarlark/src/main/java/net/starlark/java/syntax/FileOptions.java
@@ -16,6 +16,8 @@ package net.starlark.java.syntax;
 
 import com.google.auto.value.AutoValue;
 
+import net.starlark.java.eval.StarlarkSemantics;
+
 /**
  * FileOptions is a set of options that affect the static processing---scanning, parsing, validation
  * (identifier resolution), and compilation---of a single Starlark file. These options affect the
diff --git b/libstarlark/src/main/java/net/starlark/java/syntax/ParserInput.java a/libstarlark/src/main/java/net/starlark/java/syntax/ParserInput.java
index 33f6a750..bb96f748 100644
--- b/libstarlark/src/main/java/net/starlark/java/syntax/ParserInput.java
+++ a/libstarlark/src/main/java/net/starlark/java/syntax/ParserInput.java
@@ -22,6 +22,7 @@ import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
 import java.nio.file.Files;
 import java.nio.file.Paths;
+import net.starlark.java.eval.EvalException;
 
 /**
  * The apparent name and contents of a source file, for consumption by the parser. The file name
@@ -31,7 +32,7 @@ import java.nio.file.Paths;
  * trace.
  *
  * <p>The parser consumes a stream of chars (UTF-16 codes), and the syntax positions reported by
- * {@link Node#getStartOffset} and {@link Location.column} are effectively indices into a char
+ * {@link Node#getStartOffset} and {@link Location#column()} are effectively indices into a char
  * array.
  */
 public final class ParserInput {
diff --git b/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/EnablingAndDisablingFlag.java a/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/EnablingAndDisablingFlag.java
index 7e1c3b3a..d5be296d 100644
--- b/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/EnablingAndDisablingFlag.java
+++ a/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/EnablingAndDisablingFlag.java
@@ -16,6 +16,7 @@ package net.starlark.java.annot.processor.testsources;
 
 import net.starlark.java.annot.Param;
 import net.starlark.java.annot.StarlarkMethod;
+import net.starlark.java.eval.StarlarkInt;
 import net.starlark.java.eval.StarlarkValue;
 
 /**
diff --git b/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/MultipleSelfCallMethods.java a/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/MultipleSelfCallMethods.java
index cdc28ba9..0280a114 100644
--- b/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/MultipleSelfCallMethods.java
+++ a/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/MultipleSelfCallMethods.java
@@ -31,11 +31,11 @@ public class MultipleSelfCallMethods implements StarlarkValue {
       },
       documented = false)
   public StarlarkInt selfCallMethod(String one, StarlarkInt two) {
-    return 0;
+    return StarlarkInt.of(0);
   }
 
   @StarlarkMethod(name = "selfCallMethodTwo", selfCall = true, documented = false)
   public StarlarkInt selfCallMethodTwo() {
-    return 0;
+    return StarlarkInt.of(0);
   }
 }
diff --git b/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/StructFieldWithInvalidInfo.java a/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/StructFieldWithInvalidInfo.java
index 5ad388fa..9cb56618 100644
--- b/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/StructFieldWithInvalidInfo.java
+++ a/libstarlark/src/test/java/net/starlark/java/annot/processor/testsources/StructFieldWithInvalidInfo.java
@@ -15,6 +15,7 @@
 package net.starlark.java.annot.processor.testsources;
 
 import net.starlark.java.annot.StarlarkMethod;
+import net.starlark.java.eval.StarlarkThread;
 import net.starlark.java.eval.StarlarkValue;
 
 /** Test case which verifies a struct field method cannot specify useStarlarkThread. */
