<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>net.starlark.java</groupId>
    <artifactId>libstarlark</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <surefire-plugin.version>2.22.1</surefire-plugin.version>
        <maven.compiler.plugin.version>3.6.2</maven.compiler.plugin.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
        <google.errorprone.javac.version>9+181-r4173-1</google.errorprone.javac.version>
        <org.projectlombok.version>1.18.12</org.projectlombok.version>
        <google.errorprone.version>2.5.1</google.errorprone.version>
        <google.auto.value.version>1.7</google.auto.value.version>
        <google.truth.version>1.0.1</google.truth.version>
        <google.jimfs.version>1.1</google.jimfs.version>
        <google.compile.testing.version>0.18</google.compile.testing.version>
        <org.jetbrains.annotations.version>20.1.0</org.jetbrains.annotations.version>
        <google.guava.version>30.1-jre</google.guava.version>
        <org.junit.version>4.13.1</org.junit.version>
    </properties>

    <dependencies>
        <!--
        We use jetbrain's annotations library because of some
        licensing concerns that occur with javax.annotations jsr305 library.

        See this issue: https://github.com/google/guava/issues/2960
        -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${org.jetbrains.annotations.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value</artifactId>
            <version>${google.auto.value.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value-annotations</artifactId>
            <version>${google.auto.value.version}</version>
        </dependency>

        <!--Tests-->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${org.junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>
            <version>${google.truth.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.testing.compile</groupId>
            <artifactId>compile-testing</artifactId>
            <version>${google.compile.testing.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/test/java</directory>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
            </resource>
        </resources>
        <plugins>
            <!-- Make sure we generate src jars too -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <fork>true</fork>
                    <debug>false</debug>
                    <showWarnings>true</showWarnings>
                    <failOnWarning>false</failOnWarning>
                    <showDeprecation>true</showDeprecation>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <compilerArgs combine.children="append">
                        <compilerArg>-Xlint:unchecked</compilerArg>
                        <!-- Required for ErrorProne -->
                        <!-- @todo #971 Document ErrorProne tool -->
                        <compilerArg>-XDcompilePolicy=simple</compilerArg>
                        <!-- @todo #1170 ErrorProne: activate experimental checks -->
<!--                        &lt;!&ndash;-->
<!--                            The following checks have been disabled:-->
<!--                            - MissingOverride: produce false positives with @Getter from Lombok-->
<!--                            - MixedMutabilityReturnType: because I like to use Collections.empty*() methods-->
<!--                            - UnnecessaryAnonymousClass: I prefer to have an explicit implementation in a constant-->
<!--                            - PreferJavaTimeOverload: disabled because of false positives: https://github.com/google/error-prone/issues/1435-->
<!--                        &ndash;&gt;-->
<!--                        <compilerArg>-Xplugin:ErrorProne -Xep:MissingOverride:OFF -Xep:MixedMutabilityReturnType:OFF-->
<!--                            -Xep:UnnecessaryAnonymousClass:OFF -Xep:PreferJavaTimeOverload:OFF-->
<!--                        </compilerArg>-->
<!--                        <compilerArg>-->
<!--                            -J-Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${google.errorprone.javac.version}/javac-${google.errorprone.javac.version}.jar-->
<!--                        </compilerArg>-->
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${google.errorprone.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${org.projectlombok.version}</version>
                        </path>
                        <path>
                            <groupId>com.google.auto.value</groupId>
                            <artifactId>auto-value</artifactId>
                            <version>${google.auto.value.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
<!--                    <argLine>-->
<!--                        -Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${google.errorprone.javac.version}/javac-${google.errorprone.javac.version}.jar-->
<!--                    </argLine>-->
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>bintray</id>
            <distributionManagement>
                <repository>
                    <id>bintray-vg-vgs-oss</id>
                    <url>https://api.bintray.com/maven/vg/vgs-oss/libstarlark/;publish=1</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>github</id>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/verygoodsecurity/starlarky</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>
</project>
